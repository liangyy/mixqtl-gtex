if 'outdir' not in config:
    config['outdir'] = 'output'

rule all:
    input:
        [ '{outdir}/{tissue}/mixqtl.{tissue}_GTEx_eGene.chr{chr_num}.parquet'.format(chr_num=ii, tissue=config['tissue']) for ii in range(1, 23) ]
    
rule mixqtl:
    input:
        hap = lambda wildcards: [ config['hap_pattern'].format(hap_num=kk) for kk in range(1, 3) ],
        lib_size = config['library_size']['path'],
        asc = [ config['asc']['pattern'].format(hap_num=kk) for kk in range(1, 3) ],
        trc = config['trc_pattern']
        covar = config['covariate_pattern'],
        gene_list = config['egene']['pattern'],
        param_yaml = config['tensorqtl_param_yaml']
    params:
        outdir = '{outdir}/{tissue}',
        outprefix = 'mixqtl.{tissue}_GTEx_eGene',
        libsize = config['library_size']['libsize_col'],
        sample = config['library_size']['sample_id_col'],
        asc_genecol = config['asc']['gene_col'],
        egene_genecol = config['egene']['gene_col']
    output:
        '{outdir}/{tissue}/mixqtl.{tissue}_GTEx_eGene.chr{chr_num}.parquet'
    log: 
        '{outdir}/{tissue}/mixqtl.{tissue}_GTEx_eGene.chr{chr_num}.log'
    threads: 
        config['nthread']
    shell:
        'python {config[run_script_path]} \
            --hap-file {input.hap} \
            --libsize {input.lib_size}:{params.sample}:{params.libsize} \
            --covariate-matrix {input.covar} \
            --asc-matrix {input.asc}:{params.asc_genecol} \
            --trc-matrix {input.trc} \
            --param-yaml {input.param_yaml} \
            --out-dir {params.outdir} \
            --out-prefix {params.outprefix} \
            --tensorqtl {config[tensorqtl_dir]} \
            --chr chr{wildcards.chr_num} \
            --impute-trc \
            --gene-list {input.gene_list}:{params.egene_genecol} \
            --nthread {threads} > {log} 2>&1'
        
        